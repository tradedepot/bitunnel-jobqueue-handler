machine:
  environment:
    PATH: $PATH:/home/bin
  python:
    version: 2.7.3
  services:
  - docker
  node:
    version: 9.0


dependencies:
  pre:
  - mkdir -p ~/docker
  - ./scripts/circle_install_dependencies.sh
  - if [[ -e ~/docker/image.tar ]]; then docker load -i ~/docker/image.tar; fi
  - docker build -t $EXTERNAL_REGISTRY_ENDPOINT/bitunnel-jobq-handler:build-$CIRCLE_BUILD_NUM .
  - docker save $EXTERNAL_REGISTRY_ENDPOINT/bitunnel-jobq-handler:build-$CIRCLE_BUILD_NUM > ~/docker/image.tar

test:
  override:
  - echo "Todo be added "

deployment:
  develop:
    branch: develop
    commands:
    # Using docker hub...
    - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
    - docker push $EXTERNAL_REGISTRY_ENDPOINT/bitunnel-jobq-handler > /dev/null
    # KUBERNETES INIT begins
    - kubectl config set-credentials aws_kubernetes --username=$BITUNNEL_KUBERNETES_API_USER --password=$BITUNNEL_KUBERNETES_API_PASS
    - kubectl config set-cluster aws_kubernetes --insecure-skip-tls-verify=true --server=https://$BITUNNEL_KUBERNETES_API_HOST
    - kubectl config set-context aws_kubernetes --user=aws_kubernetes --namespace=default --cluster=aws_kubernetes
    - kubectl config use-context aws_kubernetes
    # KUBERNETES INIT ends
    - awk '{while(match($0,"[$]{[^}]*}")) {var=substr($0,RSTART+2,RLENGTH -3);gsub("[$]{"var"}",ENVIRON[var])}}1' < deploy/bitunnel-jobq-handler-rc.yaml > deploy/bitunnel-jobq-handler-rc.local.yaml
    - cat deploy/bitunnel-jobq-handler-rc.local.yaml
    # kubectl rolling-update $(kubectl get rc | grep bitunnel-jobq-handler | awk '{print $1}') -f deploy/bitunnel-jobq-handler-rc.local.yaml
    - kubectl deploy -f deploy/bitunnel-jobq-handler-rc.local.yaml
  prod:
    branch: master
    commands:
    # Using docker hub...
    - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
    - docker push $EXTERNAL_REGISTRY_ENDPOINT/bitunnel-jobq-handler > /dev/null
    # KUBERNETES INIT begins
    - kubectl config set-credentials aws_kubernetes-prod --username=$BITUNNEL_KUBERNETES_PROD_API_USER --password=$BITUNNEL_KUBERNETES_PROD_API_PASS
    - kubectl config set-cluster aws_kubernetes-prod --insecure-skip-tls-verify=true --server=https://$BITUNNEL_KUBERNETES_PROD_API_HOST
    - kubectl config set-context aws_kubernetes-prod --user=aws_kubernetes-prod --namespace=default --cluster=aws_kubernetes-prod
    - kubectl config use-context aws_kubernetes-prod
    # KUBERNETES INIT ends
    - awk '{while(match($0,"[$]{[^}]*}")) {var=substr($0,RSTART+2,RLENGTH -3);gsub("[$]{"var"}",ENVIRON[var])}}1' < deploy/bitunnel-jobq-handler-rc-prod.yaml > deploy/bitunnel-jobq-handler-rc.local.yaml
    - cat deploy/bitunnel-jobq-handler-rc.local.yaml
    - kubectl rolling-update $(kubectl get rc | grep bitunnel-jobq-handler | awk '{print $1}') -f deploy/bitunnel-jobq-handler-rc.local.yaml